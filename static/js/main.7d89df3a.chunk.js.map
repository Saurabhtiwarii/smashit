{"version":3,"sources":["Footer.js","images/avatar1.png","images/avatar2.png","images/avatar3.png","images/music.mp3","images/sound.wav","App.js","reportWebVitals.js","index.js"],"names":["Footer","props","className","score","App","countdown","useState","count","setCount","setScore","avatar1","avatar","setAvatar","timeUp","lastHole","pickupRandomHole","holes","document","querySelectorAll","hole","Math","floor","random","length","popoutAvatar","time","classList","add","setTimeout","remove","hit","hit_sound","querySelector","currentTime","play","selectionScreen","style","display","background_music","introWindow","selection_screen","transform","avatarSelection","n","avatar_options","forEach","avatar_option","border","getAttribute","avatar2","avatar3","addEventListener","loop","src","music","type","sound","onClick","data-select","alt","countdownBoard","pause","readyWindow","readyCountdown","setInterval","readyWindowText","innerText","clearInterval","timeLimit","startCountDown","console","log","color","playgame","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7d89df3a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"game__footer\">   \r\n        \r\n        <div className=\"score-board\">Score: <span className=\"score\">{props.score}</span></div>\r\n      </div>\r\n    )\r\n}\r\nexport default Footer;\r\n\r\n","export default __webpack_public_path__ + \"static/media/avatar1.89183647.png\";","export default __webpack_public_path__ + \"static/media/avatar2.efad8f81.png\";","export default __webpack_public_path__ + \"static/media/avatar3.93c33691.png\";","export default __webpack_public_path__ + \"static/media/music.385595c6.mp3\";","export default __webpack_public_path__ + \"static/media/sound.63f0b124.wav\";","import './App.css';\nimport Footer from './Footer';\nimport { useState } from 'react';\nimport avatar1 from './images/avatar1.png';\nimport avatar2 from './images/avatar2.png';\nimport avatar3 from './images/avatar3.png';\nimport music from './images/music.mp3';\nimport sound from './images/sound.wav';\n\n\nfunction App() {\n\n  let [count,setCount] = useState(0);\n  let [score,setScore] = useState(0);\n  let [avatar, setAvatar] = useState(avatar1);\n  //* let lastHole;\n  let timeUp = false;\n  let timeLimit = 60000;\n  let lastHole = null;\n  let countdown;\n\n  \n  const avatars =document.querySelectorAll('.avatar');\n//* pick the random hole\nfunction pickupRandomHole(){\n  const holes = document.querySelectorAll('.game__ground .hole');\n  const randomHole = Math.floor(Math.random()*holes.length);\n  const hole = holes[randomHole];\n  if (hole === lastHole){\n      return pickupRandomHole();\n  }\n  lastHole = hole;\n  return hole;\n}\n//* popout the avatar from hole\nfunction popoutAvatar(){\nconst time = Math.random() * (800 - 400) + 400;\nconst hole = pickupRandomHole();\nhole.classList.add('up');\nsetTimeout(function(){\n    if (!timeUp) popoutAvatar();\n    hole.classList.remove('up');\n},time)\n}\n\n\n // play the game\n  function playgame(){\n    const countdownBoard = document.querySelector('.countdown-board');\n    countdown = timeLimit/1000;\n    setCount(countdown);\n    timeUp = false; \n    popoutAvatar();\n    setTimeout(()=>{\n      timeUp = true;\n  }, timeLimit);\n\n  let startCountDown = setInterval(() => {\n    countdown -= 1;\n    setCount(countdown);\n    if (countdown<0){\n        countdown = 0;\n        clearInterval(startCountDown);\n        setCount('Time Up');\n        const gameoverScreen = document.querySelector('.gameover-screen');\n        gameoverScreen.style.display = 'flex';\n        console.log(`Game Over your score is ${score}`);\n    }\n\n    if(countdown == 30){\n      countdownBoard.style.color = '#f38e4b'\n    }\n\n    if(countdown == 15){\n      countdownBoard.style.color = '#f34b4b'\n    }\n}, 1000);\n}\n\n\n  function startGame(){\n     const countdownBoard = document.querySelector('.countdown-board');\n    const background_music = document.querySelector('.background_music');\n    background_music.pause();\n    const selection_screen = document.querySelector('.players');\n    selection_screen.style.display = 'none';\n    const readyWindow = document.querySelector('.ready-window');\n    readyWindow.style.display = 'flex';\n    let count = 0;\n    \n      const readyCountdown =  setInterval(()=>{\n          const readyWindowText = document.querySelector('.ready-window span');\n          count = count+1;\n          if(count === 1){\n            readyWindowText.innerText = '3';\n          }\n          else if(count === 2){\n            readyWindowText.innerText = '2';\n          }\n          else if(count === 3){\n            readyWindowText.innerText = '1';\n          } \n          else if(count === 4){\n            readyWindow.style.display = 'none';\n            clearInterval(readyCountdown);\n            playgame();\n            countdownBoard.classList.add('countdown-board-active');\n\n          }\n         \n    },1000);\n  }\n  function hit(){\n    const hit_sound = document.querySelector('.hit_sound');\n    hit_sound.currentTime = 0;\n    hit_sound.play();\n    score = score+1;\n    setScore(score)\n  }\n\n  avatars.forEach(avatar=>{\n    avatar.addEventListener('click',hit);\n  });\n  \n\nfunction selectionScreen(){\n  const gameoverScreen = document.querySelector('.gameover-screen');\n  gameoverScreen.style.display = 'none';\n  const background_music = document.querySelector('.background_music');\n  const introWindow = document.querySelector('.intro-window');\n  const selection_screen = document.querySelector('.players');\n  introWindow.style.transform = 'translateY(100%)';\n  introWindow.style.display = 'none';\n  selection_screen.style.display = 'flex';\n  background_music.play();\n \n\n}\n\nfunction avatarSelection(n){\n  const avatar_options = document.querySelectorAll('.players .players__list li');\n  avatar_options.forEach(avatar_option=>{\n      avatar_option.style.border = 'none';\n   })\n \n  avatar_options.forEach(avatar_option=>{\n   \n   if(avatar_option.getAttribute('data-select') == n) {\n     avatar_option.style.border = '5px solid rgb(196, 235, 179)';\n   }\n  })\n  \n  if(n===2){\n    setAvatar(avatar2);\n  }\n  else if(n===3){\n    setAvatar(avatar3);\n  }\n  else{\n    setAvatar(avatar1);\n  }\n  \n}\n\n\n\n \n  return (\n    <div className=\"App\">\n<audio loop className=\"background_music\">\n  <source src={ music } type=\"audio/ogg\"/>\nYour browser does not support the audio element.\n</audio>\n\n<video className=\"hit_sound\">\n  <source src={ sound } type=\"video/wav\"/>\n  <source src={ sound } type=\"video/ogg\"/>\n  Your browser does not support the video tag.\n</video>\n           \n\n <div className=\"players\">\n              <h1>Select Avatar</h1>\n                  <ul className=\"players__list\">\n                    <li  onClick={()=> avatarSelection(1)} data-select = '1'>\n                        <img src={avatar1} alt=\"\"/>\n                    </li>\n             \n                      <li  onClick={()=>avatarSelection(2)} data-select = '2'>\n                          <img src={avatar2} alt=\"\"/>\n                      </li>\n               \n           \n                      <li  onClick={()=>avatarSelection(3)} data-select = '3'>\n                         <img src={avatar3} alt=\"\"/>\n                      </li>\n                  \n                  \n                     <li></li>\n                    \n                      \n                  </ul>\n                  <button className=\"continue-btn\" onClick={startGame}>Continue</button>\n</div>\n\n            <div className=\"intro-window\">\n              <h1>Smash It</h1>\n              <button className=\"start-btn\" onClick={selectionScreen}>START</button>\n            </div>\n  \n      <div className=\"game\">  \n           \n    \n            <div className=\"ready-window\">\n              <span>Ready ?</span>\n            </div>\n            <div className=\"countdown-board\">countdown: <span className=\"countdown\">{count}</span></div>\n            <div className=\"game__ground\">\n              <div className=\"hole hole1\">\n                  <div className=\"avatar sm\">\n                    <img src={avatar} alt=\"\"/>\n                  </div>\n              </div>\n\n              <div className=\"hole hole2\">\n                  <div className=\"avatar sm\">\n                  <img src={avatar} alt=\"\"/>\n                  </div>\n              </div>\n\n              <div className=\"hole hole3\">\n                  <div className=\"avatar sm\">\n                  <img src={avatar} alt=\"\"/>\n                  </div>\n              </div>\n\n              <div className=\"hole hole4\">\n                  <div className=\"avatar lg\">\n                  <img src={avatar} alt=\"\"/>\n                  </div>\n              </div>\n\n              <div className=\"hole hole5\">\n                  <div className=\"avatar lg\">\n                  <img src={avatar} alt=\"\"/>\n                  </div>\n              </div>\n\n              <div className=\"hole hole6\">\n                  <div className=\"avatar lg\">\n                  <img src={avatar} alt=\"\"/>\n                  </div>\n              </div>\n        </div>\n            <div className=\"gameover-screen\">\n                <div className=\"gameover-screen__message\">Game Over</div>\n                <div className=\"gameover-screen__score\">Score: {score}</div>\n                <button className=\"back-btn\" onClick={selectionScreen}>Play Again</button>\n          </div>\n      </div>\n          <Footer  score = {score}/>\n         \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
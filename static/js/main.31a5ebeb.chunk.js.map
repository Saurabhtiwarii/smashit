{"version":3,"sources":["Footer.js","images/avatar1.png","images/avatar2.png","images/avatar3.png","App.js","reportWebVitals.js","index.js"],"names":["Footer","props","className","count","score","App","countdown","useState","setCount","setScore","avatar1","avatar","setAvatar","timeUp","lastHole","pickupRandomHole","holes","document","querySelectorAll","hole","Math","floor","random","length","popoutAvatar","time","classList","add","setTimeout","remove","hit","avatarSelection","n","avatar_options","forEach","avatar_option","style","border","getAttribute","avatar2","avatar3","addEventListener","onClick","data-select","src","alt","querySelector","display","readyWindow","readyCountdown","setInterval","readyWindowText","innerText","clearInterval","timeLimit","startCountDown","playgame","introWindow","selection_screen","transform","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.31a5ebeb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"game__footer\">   \r\n        <div className=\"countdown-board\">countdown: <span className=\"countdown\">{props.count}</span></div>\r\n        <div className=\"score-board\">Score: <span className=\"score\">{props.score}</span></div>\r\n      </div>\r\n    )\r\n}\r\nexport default Footer;\r\n\r\n","export default __webpack_public_path__ + \"static/media/avatar1.89183647.png\";","export default __webpack_public_path__ + \"static/media/avatar2.efad8f81.png\";","export default __webpack_public_path__ + \"static/media/avatar3.93c33691.png\";","import './App.css';\nimport Footer from './Footer';\nimport { useState } from 'react';\nimport avatar1 from './images/avatar1.png';\nimport avatar2 from './images/avatar2.png';\nimport avatar3 from './images/avatar3.png';\n\n\nfunction App() {\n  let [count,setCount] = useState(0);\n  let [score,setScore] = useState(0);\n  let [avatar, setAvatar] = useState(avatar1);\n  //* let lastHole;\n  let timeUp = false;\n  let timeLimit = 60000;\n  let lastHole = null;\n  let countdown;\n\n\n  const avatars =document.querySelectorAll('.avatar');\n//* pick the random hole\nfunction pickupRandomHole(){\n  const holes = document.querySelectorAll('.game__ground .hole');\n  const randomHole = Math.floor(Math.random()*holes.length);\n  const hole = holes[randomHole];\n  if (hole === lastHole){\n      return pickupRandomHole(holes);\n  }\n  lastHole = hole;\n  return hole;\n}\n//* popout the avatar from hole\nfunction popoutAvatar(){\nconst time = Math.random() * (700 - 400) + 400;\nconst hole = pickupRandomHole();\nhole.classList.add('up');\nsetTimeout(function(){\n    if (!timeUp) popoutAvatar();\n    hole.classList.remove('up');\n},time)\n}\n\n\n // play the game\n  function playgame(){\n    countdown = timeLimit/1000;\n    setCount(countdown);\n    timeUp = false; \n    popoutAvatar();\n    setTimeout(()=>{\n      timeUp = true;\n  }, timeLimit);\n\n  let startCountDown = setInterval(() => {\n    countdown -= 1;\n    setCount(countdown);\n    if (countdown<0){\n        countdown = 0;\n        clearInterval(startCountDown);\n        setCount('Time Up');\n    }\n}, 1000);\n}\n\n\n  function startGame(){\n    const selection_screen = document.querySelector('.players');\n    selection_screen.style.display = 'none';\n    const readyWindow = document.querySelector('.ready-window');\n    readyWindow.style.display = 'flex';\n    let count = 0;\n\n      const readyCountdown =  setInterval(()=>{\n          const readyWindowText = document.querySelector('.ready-window span');\n          count = count+1;\n          if(count === 2){\n            readyWindowText.innerText = '3';\n          }\n          else if(count === 3){\n            readyWindowText.innerText = '2';\n          }\n          else if(count === 4){\n            readyWindowText.innerText = '1';\n          } \n          else if(count === 5){\n            readyWindow.style.display = 'none';\n            clearInterval(readyCountdown);\n            playgame();\n          }\n    },1000);\n  }\n  function hit(){\n    score = score+1;\n    setScore(score)\n  }\n\n  avatars.forEach(avatar=>{\n    avatar.addEventListener('click',hit);\n  });\n  \n\nfunction selectionScreen(){\n  const introWindow = document.querySelector('.intro-window');\n  const selection_screen = document.querySelector('.players');\n  introWindow.style.transform = 'translateY(100%)';\n  selection_screen.style.display = 'flex';\n\n}\n\nfunction avatarSelection(n){\n  const avatar_options = document.querySelectorAll('.players .players__list li');\n  avatar_options.forEach(avatar_option=>{\n      avatar_option.style.border = 'none';\n   })\n \n  avatar_options.forEach(avatar_option=>{\n   \n   if(avatar_option.getAttribute('data-select') == n) {\n     avatar_option.style.border = '5px solid rgb(196, 235, 179)';\n   }\n  })\n  \n  if(n===2){\n    setAvatar(avatar2);\n  }\n  else if(n===3){\n    setAvatar(avatar3);\n  }\n  else{\n    setAvatar(avatar1);\n  }\n  \n}\n\n\n\n \n  return (\n    <div className=\"App\">\n\n           \n\n <div className=\"players\">\n              <h1>Select Avatar</h1>\n                  <ul className=\"players__list\">\n                    <li  onClick={()=> avatarSelection(1)} data-select = '1'>\n                        <img src={avatar1} alt=\"\"/>\n                    </li>\n             \n                      <li  onClick={()=>avatarSelection(2)} data-select = '2'>\n                          <img src={avatar2} alt=\"\"/>\n                      </li>\n               \n           \n                      <li  onClick={()=>avatarSelection(3)} data-select = '3'>\n                         <img src={avatar3} alt=\"\"/>\n                      </li>\n                  \n                  \n                     <li></li>\n                    \n                      \n                  </ul>\n                  <button className=\"continue-btn\" onClick={startGame}>Continue</button>\n            </div>\n  \n      <div className=\"game\">  \n           \n      <div className=\"intro-window\">\n              <h1>Smash It</h1>\n              <button className=\"start-btn\" onClick={selectionScreen}>START</button>\n            </div>\n\n            <div className=\"ready-window\">\n              <span>Ready ?</span>\n            </div>\n\n            <div className=\"game__ground\">\n              <div className=\"hole hole1\">\n                  <div className=\"avatar sm\">\n                    <img src={avatar} alt=\"\"/>\n                  </div>\n              </div>\n\n              <div className=\"hole hole2\">\n                  <div className=\"avatar sm\">\n                  <img src={avatar} alt=\"\"/>\n                  </div>\n              </div>\n\n              <div className=\"hole hole3\">\n                  <div className=\"avatar sm\">\n                  <img src={avatar} alt=\"\"/>\n                  </div>\n              </div>\n\n              <div className=\"hole hole4\">\n                  <div className=\"avatar lg\">\n                  <img src={avatar} alt=\"\"/>\n                  </div>\n              </div>\n\n              <div className=\"hole hole5\">\n                  <div className=\"avatar lg\">\n                  <img src={avatar} alt=\"\"/>\n                  </div>\n              </div>\n\n              <div className=\"hole hole6\">\n                  <div className=\"avatar lg\">\n                  <img src={avatar} alt=\"\"/>\n                  </div>\n              </div>\n        </div>\n\n      </div>\n          <Footer count = {count} score = {score}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["Footer.js","images/avatar1.png","images/avatar2.png","App.js","reportWebVitals.js","index.js"],"names":["Footer","props","className","count","score","App","countdown","useState","setCount","setScore","timeUp","lastHole","pickupRandomHole","holes","document","querySelectorAll","hole","Math","floor","random","length","popoutAvatar","time","classList","add","setTimeout","remove","hit","forEach","avatar","addEventListener","onClick","querySelector","style","transform","readyWindow","display","readyCountdown","setInterval","readyWindowText","innerText","clearInterval","timeLimit","startCountDown","playgame","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gMAUeA,MARf,SAAgBC,GACZ,OACI,sBAAKC,UAAU,eAAf,UACA,sBAAKA,UAAU,kBAAf,wBAA4C,sBAAMA,UAAU,YAAhB,SAA6BD,EAAME,WAC/E,sBAAKD,UAAU,cAAf,oBAAoC,sBAAMA,UAAU,QAAhB,SAAyBD,EAAMG,eCN5D,ICAA,ICiJAC,MA1If,WAAgB,IAOVC,EAPS,EACUC,mBAAS,GADnB,mBACRJ,EADQ,KACFK,EADE,OAEUD,mBAAS,GAFnB,mBAERH,EAFQ,KAEFK,EAFE,KAITC,GAAS,EAETC,EAAW,KAMjB,SAASC,IACP,IAAMC,EAAQC,SAASC,iBAAiB,uBAElCC,EAAOH,EADMI,KAAKC,MAAMD,KAAKE,SAASN,EAAMO,SAElD,OAAIJ,IAASL,EACFC,KAEXD,EAAWK,EACJA,GAGT,SAASK,IACT,IAAMC,EAAuB,KAAhBL,KAAKE,SAAkB,IAC9BH,EAAOJ,IACbI,EAAKO,UAAUC,IAAI,MACnBC,YAAW,WACFf,GAAQW,IACbL,EAAKO,UAAUG,OAAO,QACxBJ,GAoDA,SAASK,IAEPlB,EADAL,GAAc,GAShB,OAlFeU,SAASC,iBAAiB,WA6EjCa,SAAQ,SAAAC,GACdA,EAAOC,iBAAiB,QAAQH,MAKhC,sBAAKzB,UAAU,MAAf,UAEE,sBAAKA,UAAU,OAAf,UACM,sBAAKA,UAAU,eAAf,UACE,0CACA,wBAAQA,UAAU,YAAY6B,QA1C1C,WACsBjB,SAASkB,cAAc,iBAC/BC,MAAMC,UAAY,mBAC9B,IAAMC,EAAcrB,SAASkB,cAAc,iBAC3CG,EAAYF,MAAMG,QAAU,OAC5B,IAAIjC,EAAQ,EAEJkC,EAAkBC,aAAY,WAChC,IAAMC,EAAkBzB,SAASkB,cAAc,sBAElC,KADb7B,GAAc,GAEZoC,EAAgBC,UAAY,IAEZ,IAAVrC,EACNoC,EAAgBC,UAAY,IAEZ,IAAVrC,EACNoC,EAAgBC,UAAY,IAEZ,IAAVrC,IACNgC,EAAYF,MAAMG,QAAU,OAC5BK,cAAcJ,GA1CxB,WAEE7B,EADAF,EAAYoC,IAEZhC,GAAS,EACTW,IACAI,YAAW,WACTf,GAAS,IApCG,KAuChB,IAAIiC,EAAiBL,aAAY,WAE/B9B,EADAF,GAAa,GAETA,EAAU,IACVA,EAAY,EACZmC,cAAcE,GACdnC,EAAS,cAEd,KA0BSoC,MAEN,MAkBQ,sBAGF,qBAAK1C,UAAU,eAAf,SACE,6CAGF,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,gBAGnB,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,gBAGnB,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,gBAGnB,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,gBAGnB,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,gBAGnB,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,sBAKvB,cAAC,EAAD,CAAQC,MAASA,EAAOC,MAASA,QC/H5ByC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1C,SAAS2C,eAAe,SAM1BZ,K","file":"static/js/main.3fb3f1c9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"game__footer\">   \r\n        <div className=\"countdown-board\">countdown: <span className=\"countdown\">{props.count}</span></div>\r\n        <div className=\"score-board\">Score: <span className=\"score\">{props.score}</span></div>\r\n      </div>\r\n    )\r\n}\r\nexport default Footer;\r\n\r\n","export default __webpack_public_path__ + \"static/media/avatar1.89183647.png\";","export default __webpack_public_path__ + \"static/media/avatar2.01464f56.png\";","import './App.css';\nimport Footer from './Footer';\nimport { useState , useEffect} from 'react';\nimport './images/avatar1.png';\nimport './images/avatar2.png';\n\n\nfunction App() {\n  let [count,setCount] = useState(0);\n  let [score,setScore] = useState(0);\n  //* let lastHole;\n  let timeUp = false;\n  let timeLimit = 60000;\n  let lastHole = null;\n  let countdown;\n  let scoreUpdate=0 ;\n\n  const avatars =document.querySelectorAll('.avatar');\n//* pick the random hole\nfunction pickupRandomHole(){\n  const holes = document.querySelectorAll('.game__ground .hole');\n  const randomHole = Math.floor(Math.random()*holes.length);\n  const hole = holes[randomHole];\n  if (hole === lastHole){\n      return pickupRandomHole(holes);\n  }\n  lastHole = hole;\n  return hole;\n}\n//* popout the avatar from hole\nfunction popoutAvatar(){\nconst time = Math.random() * 1300 + 400;\nconst hole = pickupRandomHole();\nhole.classList.add('up');\nsetTimeout(function(){\n    if (!timeUp) popoutAvatar();\n    hole.classList.remove('up');\n},time);\n}\n\n\n // play the game\n  function playgame(){\n    countdown = timeLimit/1000;\n    setCount(countdown);\n    timeUp = false; \n    popoutAvatar();\n    setTimeout(()=>{\n      timeUp = true;\n  }, timeLimit);\n\n  let startCountDown = setInterval(() => {\n    countdown -= 1;\n    setCount(countdown);\n    if (countdown<0){\n        countdown = 0;\n        clearInterval(startCountDown);\n        setCount('Time Up');\n    }\n}, 1000);\n}\n\n\n  function startGame(){\n    const introWindow = document.querySelector('.intro-window');\n    introWindow.style.transform = 'translateY(100%)';\n    const readyWindow = document.querySelector('.ready-window');\n    readyWindow.style.display = 'flex';\n    let count = 0;\n\n      const readyCountdown =  setInterval(()=>{\n          const readyWindowText = document.querySelector('.ready-window span');\n          count = count+1;\n          if(count === 2){\n            readyWindowText.innerText = '3';\n          }\n          else if(count === 3){\n            readyWindowText.innerText = '2';\n          }\n          else if(count === 4){\n            readyWindowText.innerText = '1';\n          } \n          else if(count === 5){\n            readyWindow.style.display = 'none';\n            clearInterval(readyCountdown);\n            playgame();\n          }\n    },1000);\n  }\n  function hit(){\n    score = score+1;\n    setScore(score);\n  }\n\n  avatars.forEach(avatar=>{\n    avatar.addEventListener('click',hit);\n  });\n     \n \n  return (\n    <div className=\"App\">\n     \n      <div className=\"game\">  \n            <div className=\"intro-window\">\n              <h1>Smash It</h1>\n              <button className=\"start-btn\" onClick={startGame}>START</button>\n            </div>\n\n            <div className=\"ready-window\">\n              <span>Ready ?</span>\n            </div>\n\n            <div className=\"game__ground\">\n              <div className=\"hole hole1\">\n                  <div className=\"avatar sm\"></div>\n              </div>\n\n              <div className=\"hole hole2\">\n                  <div className=\"avatar sm\"></div>\n              </div>\n\n              <div className=\"hole hole3\">\n                  <div className=\"avatar sm\"></div>\n              </div>\n\n              <div className=\"hole hole4\">\n                  <div className=\"avatar lg\"></div>\n              </div>\n\n              <div className=\"hole hole5\">\n                  <div className=\"avatar lg\"></div>\n              </div>\n\n              <div className=\"hole hole6\">\n                  <div className=\"avatar lg\"></div>\n              </div>\n        </div>\n\n      </div>\n          <Footer count = {count} score = {score}/>\n          \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}